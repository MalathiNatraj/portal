@{
    Layout = null;
}
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title></title>
    <script type="text/javascript" src="@Url.Content("~/Scripts/IPConfigure/jquery-1.9.0.min.js")" ></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/IPConfigure/Player.min.js")" ></script>
</head>
<body style="margin:2% 0.4%;">
    <div id="ipConfigure-playerTwo" style="background-color: black; width: 99%; height: 206px; border: 1px solid #989898;"></div>
    <div style="margin-left:40%; margin-top:2%;">  
        <img id="btnPlayCameraTwo" src="@Url.Content("~/Content/images/Play.png")" height="25px" width="25px" alt="Play" onclick="javascript:playSecondCamera();" />
        <img id="btnStopCameraTwo" src="@Url.Content("~/Content/images/Stop.png")" height="25px" width="25px" alt="Stop" onclick="javascript:stopCameraTwo();" />                                                           
    </div>
     @Html.Hidden("hdnCameraTwoId", (String)ViewBag.CameraId)
</body>

    <script type="text/javascript">

        var dataSource;
        var ManagementUri = "";
        var CurrentCameraTwo = "";

        function stopCameraTwo() {
            playerTwo.Stop();
        }

        function playSecondCamera() {
            if (CurrentCameraTwo != "") {
                stopCameraTwo();
            }
            playerTwo.Play(CurrentCameraTwo);
        }

        $(document).ready(function () {
            ManagementUri = '@System.Web.Configuration.WebConfigurationManager.AppSettings["IpConfigureURL"]';
            var varIpConfigure = ipConfigure;
            varIpConfigure.Settings.ManagementUri = ManagementUri;
            var playerdivTwo = $("#ipConfigure-playerTwo");
            var playerTwo = new ipConfigure.Player(playerdivTwo);

            $.ajax(varIpConfigure.Settings.ManagementUri + "/services/API.svc/GetCameras",
                { dataType: "jsonp" })
                .done(function (secondCameraData) {
                    secondCameraData.d.sort(function (a, b) {
                        if (a.Name > b.Name) return 1;
                        else if (a.Name < b.Name) return -1;
                        else return 0;
                    });
                    updateCameraTwoDataSource(secondCameraData.d)
                })
                .fail(function (secondCameraData) {
                    loadCameraDropdowns();
                });


            });

        function loadCameraDropdowns() {
            ManagementUri = $('#hdnIPConfigUrl').val();
            var varIpConfigure = ipConfigure;
            varIpConfigure.Settings.ManagementUri = ManagementUri;
            var playerdivTwo = $("#ipConfigure-playerTwo");
            var playerTwo = new ipConfigure.Player(playerdivTwo);

            $.ajax(varIpConfigure.Settings.ManagementUri + "/services/API.svc/GetCameras",
                { dataType: "jsonp" })
                .done(function (secondCameraData) {
                    secondCameraData.d.sort(function (a, b) {
                        if (a.Name > b.Name) return 1;
                        else if (a.Name < b.Name) return -1;
                        else return 0;
                    });
                    updateCameraTwoDataSource(secondCameraData.d)
                })
                .fail(function (secondCameraData) {
                });
        }

        function updateCameraTwoDataSource(secondCameraData) {
            var varCameraTwoId = $("#hdnCameraTwoId").val();
            var playerdivTwo = $("#ipConfigure-playerTwo");
            if (varCameraTwoId != undefined && varCameraTwoId != null && varCameraTwoId != "") {
                for (var i = 0; i < secondCameraData.length; i++) {
                    if (parseInt(varCameraTwoId) == secondCameraData[i].CameraID) {
                        CurrentCameraTwo = secondCameraData[i];
                        ipConfigure.Settings.ManagementUri = ManagementUri;
                        playerTwo = new ipConfigure.Player(playerdivTwo);
                        playerTwo.Play(CurrentCameraTwo);
                    }
                }
            }
        }

</script>
</html>
