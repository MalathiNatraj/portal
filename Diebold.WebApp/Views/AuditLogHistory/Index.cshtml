@model IEnumerable<Diebold.WebApp.Models.LogHistoryViewModel>
@{
    ViewBag.Title = "Audit Log History";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}
<div id="dvReportTitle" class="pallette-detail-header-bg">  
<p>Log History</p>
</div>
<style>
.k-grid-header .k-header .k-link {
line-height:9px;
}
</style>
@using (Html.BeginForm("Index", "Reporting", FormMethod.Post, new { @class="filters"}))
{
    <div class="clearfix">
        @Html.Partial("_AuditHistoryFilter", (Diebold.WebApp.Models.LogHistoryFilterViewModel) @ViewBag.LogHistoryFilterViewModel)
        <div class="clear">
        </div>
        <div class="add-link" style="margin-top: 6%;" align="center">
            <input type="button" id="btnGenerateReport" value="Apply" style="width: 12%;" onclick="GenerateAuditReport();"/>
         </div>
    </div>
}

<div class="reportActions">
	<a id="exportToPDF" href="#">&#91;Export to PDF&#93;</a>
	<a id="exportToXLS" href="#">&#91;Export to XLS&#93;</a>
	<a id="print" href="#" style="pointer-events: none; cursor: default; color:black;">&#91;Print&#93;</a>
      @(Html.Kendo().Grid(Model)
        .HtmlAttributes(new { style = "width:100%" })
        .Name("grdReportAudit")
        .Pageable()
        .Resizable(resize => resize.Columns(true))
        .DataSource(dataSource => dataSource        
        .Ajax()
        .PageSize(10)
        .Read(read => read.Action("BindAuditReport", "AuditLogHistory")
        .Data("additionalData"))
        .ServerOperation(false)
        )
        .Columns(columns =>
        {
            columns.Bound(c => c.ViewDate).Title("Date");
            columns.Bound(c => c.User);
            columns.Bound(c => c.LogAction);
        })                    
        .Sortable()
        )        
</div>

    <script type="text/javascript">

        $(document).ready(function () {

            $('#exportToXLS').attr("href", '@Url.Action("ExportToExcel")' + "?" + getFiltersQueryString());
            $('#exportToPDF').attr("href", '@Url.Action("ExportToPdf")' + "?" + getFiltersQueryString());
            $('#btnGenerateReport').click(function () {
                // $('#logHistory').trigger("reloadGrid");
                $('#exportToXLS').attr("href", '@Url.Action("ExportToExcel")' + "?" + getFiltersQueryString());
                $('#exportToPDF').attr("href", '@Url.Action("ExportToPdf")' + "?" + getFiltersQueryString());
            });
        });

        function getSelectedGroup1() {            
//            var grdSelectedGroup1 = $("#grdFirstLevel").data("kendoGrid");
//            var dataGroup1 = grdSelectedGroup1.dataSource.data();
//            var totalNumberGroup1 = dataGroup1.length;
            var SelectedGroup1Array = new Array();
//            for (var i = 0; i < totalNumberGroup1; i++) {
//                var currentDataItemGroupOne = dataGroup1[i];
//                SelectedGroup1Array[i] = currentDataItemGroupOne.Id;
//            }
            return SelectedGroup1Array;
        }

        function getSelectedGroup2() {            
            //var grdSelectedGroup2 = $("#grdSecondLevel").data("kendoGrid");
            //var dataGroup2 = grdSelectedGroup2.dataSource.data();
            //var totalNumberGroup2 = dataGroup2.length;
            var SelectedGroup2Array = new Array();
//            for (var i = 0; i < totalNumberGroup2; i++) {
//                var currentDataItemGroupTwo = dataGroup2[i];
//                SelectedGroup2Array[i] = currentDataItemGroupTwo.Id;
//            }
            return SelectedGroup2Array;

        }

        function getSelectedSites() {            
//            var grdSelectedSite = $("#grdSiteLevel").data("kendoGrid");
//            var datasite = grdSelectedSite.dataSource.data();
//            var totalNumbersite = datasite.length;
//            var SelectedsiteArray = new Array();
//            for (var i = 0; i < totalNumbersite; i++) {
//                var currentDataItemsite = datasite[i];
//                SelectedsiteArray[i] = currentDataItemsite.Name;
//            }
            //            return SelectedsiteArray;


//                        var grdSelectedSite = $("#grdSiteLevel").data("kendoGrid");
//                        var datasite = grdSelectedSite.dataSource.data();
//                        var totalNumbersite = datasite.length;
                        var SelectedsiteArray = new Array();
//                        for (var i = 0; i < totalNumbersite; i++) {
//                            var currentDataItemsite = datasite[i];
//                            SelectedsiteArray[i] = currentDataItemsite.Name;
//                        }
                        return SelectedsiteArray;
        }

        function getSelectedDevices() {            
            //var grdSelectedGroup = $("#grdGroupLevel").data("kendoGrid");
            //var data = grdSelectedGroup.dataSource.data();
            //var totalNumber = data.length;
            var SelectedDeviceArray = new Array();
//            for (var i = 0; i < totalNumber; i++) {
//                var currentDataItem = data[i];
//                SelectedDeviceArray[i] = currentDataItem.GroupId;
//            }
            return SelectedDeviceArray;
        }

        function getFiltersQueryString() {
            var qs = "";
            var emptyUserStatus = "";
            var struserInvolved = $("#UserInvolved").val();
            var stractionTypes = $("#ActionTypes").val();
            if (struserInvolved == '' || struserInvolved == '-- User Involved --' || stractionTypes == '' || stractionTypes == '-- Action Type --') {
                emptyUserStatus = "";
            }
            else {
                emptyUserStatus = "ActiveUsers";
            }
            
            qs += 'sortingName=' + 'Date';
            qs += '&ascending=' + 'false';
            qs += '&actionTypes=' + getSelectedActions();
            qs += '&userIds=' + getSelectedUsers();
            qs += '&selectedDeviceIds=' + getSelectedDevices();
            qs += '&selectedSiteIds=' + getSelectedSites();
            qs += '&selectedGroup2Ids=' + getSelectedGroup2();
            qs += '&selectedGroup1Ids=' + getSelectedGroup1();
            qs += '&dateType=' + $('#DateType').val();
            qs += '&dateFrom=' + $('#DisplayDateFrom').val();
            qs += '&dateTo=' + $('#DisplayDateTo').val();
            //qs += '&userStatus=' + $('#cboDeviceStatus').val();
            qs += '&userStatus=' + emptyUserStatus;
            return qs;
        }

        function loadExtraParams() {
            var jsObj = null;
            var params = [];
            params.push({ name: 'actionTypes', value: getSelectedActions() });
            params.push({ name: 'userIds', value: getSelectedUsers() });
            params.push({ name: 'selectedDeviceIds', value: getSelectedDevices() });
            params.push({ name: 'selectedSiteIds', value: getSelectedSites() });
            params.push({ name: 'selectedGroup2Ids', value: getSelectedGroup2() });
            params.push({ name: 'selectedGroup1Ids', value: getSelectedGroup1() });
            params.push({ name: 'dateType', value: $('#DateType').val() });
            params.push({ name: 'dateFrom', value: $('#DateFrom').val() });
            params.push({ name: 'dateTo', value: $('#DateTo').val() });
            params.push({ name: 'userStatus', value: $('#UserStatus').val() });
            jsObj = { Params: params };
            return JSON.stringify(params);
        };
    </script>

    <script type="text/javascript">
        $(document).ready(function () {

            //            $("#FirstLevelGroup option:first").before("<option value>-- Select --</option>");
            //            $('#FirstLevelGroup').val('-- Select --');

            //            $("#SecondLevelGroup").CascadingDropDown("#FirstLevelGroup", '/Monitor/AsyncSecondLevelGroup',
            //            {
            //                postData: function () {
            //                    return { id: $('#FirstLevelGroup').val() };
            //                },
            //                onLoaded: function () {
            //                    $('#SecondLevelGroup').trigger("liszt:updated");
            //                    $('#Site').trigger("liszt:updated");
            //                    $('#Device').trigger("liszt:updated");
            //                },
            //                onReseted: function () {
            //                    $('#SecondLevelGroup').trigger("liszt:updated");
            //                    $('#Site').trigger("liszt:updated");
            //                    $('#Device').trigger("liszt:updated");
            //                }
            //            });

            //            $("#Site").CascadingDropDown("#SecondLevelGroup", '/Monitor/AsyncSites',
            //            {
            //                postData: function () {
            //                    return { id: $('#SecondLevelGroup').val() };
            //                },
            //                onLoaded: function () {
            //                    $('#Site').trigger("liszt:updated");
            //                    $('#Device').trigger("liszt:updated");
            //                },
            //                onReseted: function () {
            //                    $('#Site').trigger("liszt:updated");
            //                    $('#Device').trigger("liszt:updated");
            //                }
            //            });

            //            $("#Device").CascadingDropDown("#Site", '/Monitor/AsyncDevices',
            //            {
            //                postData: function () {
            //                    return { id: $('#Site').val() };
            //                },
            //                onLoaded: function () {
            //                    $('#Device').trigger("liszt:updated");
            //                },
            //                onReseted: function () {
            //                    $('#Device').trigger("liszt:updated");
            //                }
            //            });

            //            $("#selectedGroups ul li:odd").addClass("odd");

            //            $(".chzn-select").chosen();

            //            $("#removeGroup").live('click', function () {
            //                $(this).closest('li').find('input[name$="Selected"]').val('False');
            //                $(this).closest('li').hide();
            //            });

            //            $("#btnSaveGroups").click(function () {
            //                $('#monitorAssignmentForm').submit();
            //            });

            //            $("#btnAddGroup").click(function () {

            //                if (validateGroup()) {
            //                    var index = $("#selectedGroups ul li").size();
            //                    var newRow = $('<li>');

            //                    if (!$("#selectedGroups ul li:last").hasClass("odd")) {
            //                        newRow.addClass("odd");
            //                    }

            //                    newRow.addClass(getClassName());
            //                    newRow.append(getGroupName());

            //                    newRow.append($('<input>').attr('name', '[' + index + '].Selected').attr('value', 'True').attr('type', 'hidden'));
            //                    newRow.append($('<input>').attr('name', '[' + index + '].IsNew').attr('value', 'True').attr('type', 'hidden'));
            //                    //if ($('#FirstLevelGroup').val() != "") {
            //                    newRow.append($('<input>').attr('name', '[' + index + '].FirstGroupLevelId').attr('value', $('#FirstLevelGroup').val()).attr('type', 'hidden'));
            //                    //}
            //                    //if ($('#SecondLevelGroup').val() != "") {
            //                    newRow.append($('<input>').attr('name', '[' + index + '].SecondGroupLevelId').attr('value', $('#SecondLevelGroup').val()).attr('type', 'hidden'));
            //                    //}
            //                    //if ($('#Site').val() != "") {
            //                    newRow.append($('<input>').attr('name', '[' + index + '].SiteId').attr('value', $('#Site').val()).attr('type', 'hidden'));
            //                    //}
            //                    //if ($('#Device').val() != "") {
            //                    newRow.append($('<input>').attr('name', '[' + index + '].DeviceId').attr('value', $('#Device').val()).attr('type', 'hidden'));
            //                    //}

            //                    newRow.append("<a href='#' id='removeGroup'>X</a>");

            //                    $("#selectedGroups ul").append(newRow);
            //                }
            //            });

            function getGroupName() {

                if ($('#Device').val() != "") {
                    return 'Device: ' + $("#Device :selected").text();
                }
                else if ($('#Site').val() != "") {
                    return 'Site: ' + $("#Site :selected").text();
                }
                else if ($('#SecondLevelGroup').val() != "") {
                    return "@ViewBag.SecondLevelName" + ": " + $("#SecondLevelGroup :selected").text();
                }
                else if ($('#FirstLevelGroup').val() != "") {
                    return "@ViewBag.FirstLevelName" + ": " + $("#FirstLevelGroup :selected").text();
                }

                return '';
            }

            function getClassName() {

                if ($('#Device').val() != "") {
                    return 'deviceItem';
                }
                else if ($('#Site').val() != "") {
                    return 'siteItem';
                }
                else if ($('#SecondLevelGroup').val() != "") {
                    return "areaItem";
                }
                else if ($('#FirstLevelGroup').val() != "") {
                    return "districtItem";
                }

                return '';
            }

            function validateGroup() {
                if ($('#Device').val() != "") {
                    if ($('#selectedGroups ul li[class*="deviceItem"]:visible input[name*="DeviceId"][value="' + $('#Device').val() + '"]').parent().find('input[name$="Selected"]').size() > 0) {
                        //there's a selected element that has the same deviceid.

                        displayGroupErrorMessage("This Device is already been selected");
                        return false;
                    }
                }
                if ($('#Site').val() != "") {
                    var parent_li = $('#selectedGroups ul li input[name$="SiteId"][value="' + $('#Site').val() + '"]').parent().has('input[name$="Selected"][value="True"]');

                    if (parent_li != null) {
                        //there are (selected=true) li's that have inputs named siteid with the same value as the one i'm inserting...
                        if (parent_li.find('input[name$="DeviceId"][value=""]').size() > 0) {
                            //one of those li's also has no device (so i'm already monitoring this device by site
                            displayGroupErrorMessage("This Site is already been selected");
                            return false;
                        }
                    }
                }

                if ($('#SecondLevelGroup').val() != "") {
                    var parent_li = $('#selectedGroups ul li input[name$="SecondGroupLevelId"][value="' + $('#SecondLevelGroup').val() + '"]').parent().has('input[name$="Selected"][value="True"]');

                    if (parent_li != null) {
                        //there are (selected=true) li's that have inputs named secondlevelgroupid with the same value as the one i'm inserting...
                        if (parent_li.find('input[name$="SiteId"][value=""]').size() > 0) {
                            //one of those li's also has no site (so i'm already monitoring this site by area
                            displayGroupErrorMessage("This Area is already been selected");
                            return false;
                        }
                    }
                }

                if ($('#FirstLevelGroup').val() != "") {
                    var parent_li = $('#selectedGroups ul li input[name$="FirstGroupLevelId"][value="' + $('#FirstLevelGroup').val() + '"]').parent().has('input[name$="Selected"][value="True"]');

                    if (parent_li != null) {
                        //there are (selected=true) li's that have inputs named firstgrouplevelid with the same value as the one i'm inserting...
                        if (parent_li.find('input[name$="SecondGroupLevelId"][value=""]').size() > 0) {
                            //one of those li's also has no site (so i'm already monitoring this site by area
                            displayGroupErrorMessage("This District is already been selected");
                            return false;
                        }
                    }
                }
                else {
                    displayGroupErrorMessage("You have to select at least one grouping level.");

                    return false;
                }


                return true;
            }

            function displayGroupErrorMessage(msg) {
                alert(msg);
            }
        });

        function getSelectedActions() {
            //            var entityGrid = $("#grdActionType").data("kendoGrid");
            //            var data = entityGrid.dataSource.data();
            //            var totalNumber = data.length;
            //            var VersionIdArray = new Array();
            //            for (var i = 0; i < totalNumber; i++) {
            //                var currentDataItem = data[i];
            //                VersionIdArray[i] = currentDataItem.ActionType;
            //                        }

            var VersionIdArray = new Array();
            var ActionTypescombobox = $("#ActionTypes").data("kendoComboBox");
            VersionIdArray[0] = ActionTypescombobox.text();
            return VersionIdArray;
        }

        function getSelectedUsers() {
            //            var grdUsers = $("#grdUsers").data("kendoGrid");
            //            var data = grdUsers.dataSource.data();
            //            var totalNumber = data.length;
            //            var UserIdArray = new Array();
            //            for (var i = 0; i < totalNumber; i++) {
            //                var currentDataItem = data[i];
            //                UserIdArray[i] = currentDataItem.UserId;
            //            }
            //            return UserIdArray;


            var UserIdArray = new Array();
            var UserIdcombobox = $("#UserInvolved").data("kendoComboBox");
           // var Filterscombobox = $("#FilterOptions").data("kendoComboBox");
            //var filterText = Filterscombobox.text();
//            if (filterText == 'All' || filterText == 'Event Specific') {
//                UserIdArray[0] = 'All';
//            }
//            else {
//                UserIdArray[0] = UserIdcombobox.value();
//            }
            
            UserIdArray[0] = UserIdcombobox.value();
            return UserIdArray;
        }

        function additionalData() {
            var jsObj = null;
           
            var emptyUserStatus = "";           
            var struserInvolved = $("#UserInvolved").val();
            var stractionTypes = $("#ActionTypes").val();
            if (struserInvolved == '' || struserInvolved == '-- User Involved --' || stractionTypes == '' || stractionTypes == '-- Action Type --') {
                emptyUserStatus = "";
            }
            else {
                emptyUserStatus = "ActiveUsers";
            }

            //var emptyUserStatus = "ActiveUsers";
            var paramsDetails = 'actionTypes:' + getSelectedActions() + ";";
            //paramsDetails += 'deviceStatus:' + $('#cboDeviceStatus').val() + ";";
            paramsDetails += 'deviceStatus:' + emptyUserStatus + ";";
            //paramsDetails += 'userIds:' + getSelectedUsers()+ ";";
            paramsDetails += 'userIds:' + getSelectedUsers() + ";";
            paramsDetails += 'selectedDeviceIds:' + getSelectedDevices() + ";";
            paramsDetails += 'selectedSiteIds:' + getSelectedSites() + ";";
            paramsDetails += 'selectedGroup2Ids:' + getSelectedGroup2() + ";";
            paramsDetails += 'selectedGroup1Ids:' + getSelectedGroup1() + ";";
            paramsDetails += 'dateType:' + $('#DateType').val() + ";";
            paramsDetails += 'dateFrom:' + $('#DisplayDateFrom').val() + ";";
            paramsDetails += 'dateTo:' + $('#DisplayDateTo').val() + ";";

            return { param: paramsDetails };
        }

        function GenerateAuditReport() {
            // Need to Do the validation
            // Validation for Selected Group Levels
            //            var TotalGroupLevelRows = $("#grdGroupLevel").find('tr'); // Find number of rows in table, if no rows are present then alert for Select Group Levels
            //            var TotalgrdFirstLevelRows = $("#grdFirstLevel").find('tr');
            //            var TotalgrdSecondLevelRows = $("#grdSecondLevel").find('tr');
            //            var TotalgrdSiteLevelRows = $("#grdSiteLevel").find('tr');
            //            if (TotalgrdFirstLevelRows.length < 2 && TotalgrdSecondLevelRows.length < 2 && TotalgrdSiteLevelRows.length < 2 && TotalGroupLevelRows.length < 2) {
            //                alert("You have to select at least one grouping level.");
            //                return false;
            //            } 

            var userFilter = $("#UserInvolved").val();
            var actionTypeFilter = $("#ActionTypes").val();
            $("#dvErrAuditReport ul").empty();

            if ((userFilter == '' || userFilter == '-- User Involved --') && (actionTypeFilter == '' || actionTypeFilter == '-- Action Type --')) {
                $('#dvErrAuditReport ul').append('<li class="validation-summary-reports">Please select User</li>');
                $('#dvErrAuditReport ul').append('<li class="validation-summary-reports">Please select Event</li>');
            }
            else if (userFilter == '' || userFilter == '-- User Involved --') {
                $('#dvErrAuditReport ul').append('<li class="validation-summary-reports">Please select User</li>');
            }
            else if (actionTypeFilter == '' || actionTypeFilter == '-- Action Type --') {
                $('#dvErrAuditReport ul').append('<li class="validation-summary-reports">Please select Event</li>');
            }
            else {
                var grid = $("#grdReportAudit").data("kendoGrid");
                grid.dataSource.read();
            }
        }

        function getSelectedGroup1() {
            //var grdSelectedGroup1 = $("#grdFirstLevel").data("kendoGrid");
            //var dataGroup1 = grdSelectedGroup1.dataSource.data();
            //var totalNumberGroup1 = dataGroup1.length;
            var SelectedGroup1Array = new Array();
//            for (var i = 0; i < totalNumberGroup1; i++) {
//                var currentDataItemGroupOne = dataGroup1[i];
//                SelectedGroup1Array[i] = currentDataItemGroupOne.Id;
//            }
            return SelectedGroup1Array;
        }

        function getSelectedGroup2() {
//            var grdSelectedGroup2 = $("#grdSecondLevel").data("kendoGrid");
//            var dataGroup2 = grdSelectedGroup2.dataSource.data();
//            var totalNumberGroup2 = dataGroup2.length;
            var SelectedGroup2Array = new Array();
//            for (var i = 0; i < totalNumberGroup2; i++) {
//                var currentDataItemGroupTwo = dataGroup2[i];
//                SelectedGroup2Array[i] = currentDataItemGroupTwo.Id;
//            }
            return SelectedGroup2Array;
        }

        function getSelectedSites() {            
//            var grdSelectedSite = $("#grdSiteLevel").data("kendoGrid");
//            var datasite = grdSelectedSite.dataSource.data();
//            var totalNumbersite = datasite.length;
//            var SelectedsiteArray = new Array();
//            for (var i = 0; i < totalNumbersite; i++) {
//                var currentDataItemsite = datasite[i];
//                SelectedsiteArray[i] = currentDataItemsite.Id;
//            }
            //            return SelectedsiteArray;

            var SelectedsiteArray = new Array();
//            for (var i = 0; i < totalNumbersite; i++) {
//                var currentDataItemsite = datasite[i];
//                SelectedsiteArray[i] = currentDataItemsite.Id;
//            }
            return SelectedsiteArray;
        }

        function getSelectedDevices() {
//            var grdSelectedGroup = $("#grdGroupLevel").data("kendoGrid");
//            var data = grdSelectedGroup.dataSource.data();
//            var totalNumber = data.length;
//            var SelectedDeviceArray = new Array();
//            for (var i = 0; i < totalNumber; i++) {
//                var currentDataItem = data[i];
//                SelectedDeviceArray[i] = currentDataItem.GroupId;
//            }
//            return SelectedDeviceArray;




//            var grdSelectedGroup = $("#grdGroupLevel").data("kendoGrid");
//            var data = grdSelectedGroup.dataSource.data();
//            var totalNumber = data.length;
            var SelectedDeviceArray = new Array();
//            for (var i = 0; i < totalNumber; i++) {
//                var currentDataItem = data[i];
//                SelectedDeviceArray[i] = currentDataItem.GroupId;
//            }
            return SelectedDeviceArray;
        }

        function displayGroupErrorMessage(msg) {
            alert(msg);
        }
    </script>
